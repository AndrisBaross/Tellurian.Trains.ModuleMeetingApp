@using System.Reflection
@inject IStringLocalizer<App> Localizer

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">@Localizer["AppName"] @AppVersion()</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>@Localizer["Home"]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="settings">
                <span class="oi oi-account-login" aria-hidden="true"></span>@Localizer["Settings"]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="clock">
                <span class="oi oi-clock" aria-hidden="true"></span>@Localizer["Clock"]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="clockadmin">
                <span class="oi oi-wrench" aria-hidden="true"></span>@Localizer["ClockAdministration"]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="clockusers">
                <span class="oi oi-people" aria-hidden="true"></span>@Localizer["ClockUsers"]
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="about">
                <span class="oi oi-info" aria-hidden="true"></span>@Localizer["About"]
            </NavLink>
        </li>
    </ul>
    <div>
    </div>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }



    private string AppVersion()
    {
        var v = Assembly.GetExecutingAssembly().GetName().Version;
        return v is null ? string.Empty : $"{v.Major}.{v.Minor}.{v.Build}";
    }

}
